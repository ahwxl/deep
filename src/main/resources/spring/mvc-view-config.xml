<?xml version="1.0" encoding="UTF-8"?>
<!--
	- DispatcherServlet application context for PetClinic's web tier.
-->
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:oxm="http://www.springframework.org/schema/oxm" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/oxm http://www.springframework.org/schema/oxm/spring-oxm.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">
    
    <!-- 拦截器 -->
    <mvc:interceptors>
        <mvc:interceptor>
            <!-- 对所有的请求拦截使用/** ,对某个模块下的请求拦截使用：/myPath/* -->
            <!-- <mvc:exclude-mapping path="/resources/**" /> -->
            <mvc:mapping path="/**"  />
            <ref bean="userAccessInterceptor" />
        </mvc:interceptor>
    </mvc:interceptors>
 
    <bean id="userAccessInterceptor"
        class="com.bplow.netconn.query.interceptor.RequestStatisIntercaptor">
    </bean>
    
    <!--
    - The ContentNegotiatingViewResolver delegates to the InternalResourceViewResolver and BeanNameViewResolver,
    - and uses the requested media type (determined by the path extension) to pick a matching view. 
    - When the media type is 'text/html', it will delegate to the InternalResourceViewResolver's JstlView, 
    - otherwise to the BeanNameViewResolver.
    -->

	<!-- <mvc:view-resolvers>
		<mvc:content-negotiation>
			<mvc:default-views>
				<bean
					class="org.springframework.web.servlet.view.json.MappingJackson2JsonView">
					<property name="jsonpParameterNames">
						<set>
							<value>jsonp</value>
							<value>callback</value>
						</set>
					</property>
				</bean>
			</mvc:default-views>
		</mvc:content-negotiation>
		<mvc:velocity/> 
	</mvc:view-resolvers>
	
	<mvc:annotation-driven>  
    <mvc:message-converters register-defaults="true">  
        <bean class="com.bplow.netconn.base.json.UTF8StringHttpMessageConverter"/>  
    </mvc:message-converters>  
</mvc:annotation-driven> -->
    
	<!-- <mvc:view-resolvers>
		<mvc:content-negotiation use-not-acceptable="true">
	    	<mvc:default-views>	    		
	      		<bean class="org.springframework.web.servlet.view.velocity.VelocityLayoutView">
	      		</bean>
	    	</mvc:default-views>
	  	</mvc:content-negotiation>

	  	<mvc:velocity prefix="" suffix=".vm" />
	  	<mvc:bean-name></mvc:bean-name>
	</mvc:view-resolvers> -->
	
	<!-- <mvc:velocity-configurer resource-loader-path="/WEB-INF/pages/,classpath:velocity.properties"  /> -->
	
	<!-- <bean id="viewNameTranslator"
            class="org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator"/> -->
	

	<!-- <bean id="viewResolver"
		class="org.springframework.web.servlet.view.velocity.VelocityViewResolver">
		<property name="cache" value="false" />
		<property name="prefix" value="/WEB-INF/view/" />
		<property name="suffix" value=".vm" />
	</bean> -->
    
	
	<!-- <bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter"/> -->
    


    <!-- Renders an Atom feed of the visits. Used by the BeanNameViewResolver  
    <bean id="vets/vetList.atom" class="org.springframework.samples.petclinic.web.VetsAtomView"/>-->

    <!-- Renders an XML view. Used by the BeanNameViewResolver  
    <bean id="vets/vetList.xml" class="org.springframework.web.servlet.view.xml.MarshallingView">
        <property name="marshaller" ref="marshaller"/>
    </bean>-->

    <!-- <oxm:jaxb2-marshaller id="marshaller"> -->
        <!-- Object-XML mapping declared using annotations inside 'Vets' -->
        <!-- <oxm:class-to-be-bound name="org.springframework.samples.petclinic.model.Vets"/>
    </oxm:jaxb2-marshaller> -->
    <!-- velocity 配置 -->
	<bean id="velocityConfig"
		class="org.springframework.web.servlet.view.velocity.VelocityConfigurer">
		<property name="resourceLoaderPath" value="/WEB-INF/view/" />
		<property name="velocityProperties">
			<props>
				<prop key="resource.loader">file</prop>
				<prop key="file.resource.loader.cache">false</prop>
				<prop key="input.encoding">UTF-8</prop>
				<prop key="output.encoding">UTF-8</prop>
				<prop key="contentType">text/html;charset=UTF-8</prop>
			</props>
		</property>
	</bean>

	<bean id="viewResolver"
		class="org.springframework.web.servlet.view.velocity.VelocityViewResolver">
		<property name="cache" value="false" />
		<property name="prefix" value="" />
		<property name="suffix" value=".vm" />
		<property name="contentType" value="text/html;charset=UTF-8"></property> 
		<property name="order" value="0" />
	</bean>
	
<!-- 	<bean class="org.springframework.web.servlet.view.json.MappingJackson2JsonView">  
    <property name="jsonpParameterNames">  
        <set>  
            <value>jsonp</value>  
            <value>callback</value>  
        </set>  
   </property>
</bean>   -->

	<!--<bean id="freemarkerViewResolver"
		class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver">
		<property name="contentType" value="text/html; charset=UTF-8" />
		<property name="prefix" value="" />
        <property name="suffix" value=".ftl" />
		<property name="exposeRequestAttributes" value="false" />
		<property name="exposeSessionAttributes" value="false" />
		<property name="exposeSpringMacroHelpers" value="true" />
	</bean>

	 <bean id="freemarkerConfig"
		class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
		<property name="freemarkerVariables">
			<map>
				<entry key="product_list" value-ref="productListDirective" />
			</map>
		</property>
		<property name="templateLoaderPath" value="/WEB-INF/view/" />
		<property name="freemarkerSettings">
			<props>
				<prop key="tag_syntax">auto_detect</prop>
				<prop key="template_update_delay">0</prop>
				<prop key="defaultEncoding">UTF-8</prop>
				<prop key="url_escaping_charset">UTF-8</prop>
				<prop key="locale">zh_CN</prop>
				<prop key="boolean_format">true,false</prop>
				<prop key="datetime_format">yyyy-MM-dd HH:mm:ss</prop>
				<prop key="date_format">yyyy-MM-dd</prop>
				<prop key="time_format">HH:mm:ss</prop>
				<prop key="number_format">0.######</prop>
				<prop key="whitespace_stripping">true</prop>
			</props>
		</property>
	</bean> -->
	

</beans>
